// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyFirstDevOpsProjectApp.Data;

#nullable disable

namespace MyFirstDevOpsProjectApp.Migrations
{
    [DbContext(typeof(SqlContext))]
    partial class SqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyFirstDevOpsProjectApp.Models.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MyFirstDevOpsProjectApp.Models.CustomerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("char(6)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MyFirstDevOpsProjectApp.Models.OrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerIdId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliverDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("Order")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("DateTime");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("Decimal");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("Decimal");

                    b.HasKey("Id");

                    b.HasIndex("CustomerIdId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MyFirstDevOpsProjectApp.Models.OrderRowEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrderIdId")
                        .HasColumnType("int");

                    b.Property<int>("ProductIdId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("Int");

                    b.Property<decimal>("TotalProductPrice")
                        .HasColumnType("Decimal");

                    b.HasKey("Id");

                    b.HasIndex("OrderIdId");

                    b.HasIndex("ProductIdId");

                    b.ToTable("OrderRows");
                });

            modelBuilder.Entity("MyFirstDevOpsProjectApp.Models.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("Int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CategoryNameId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsOnSale")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("Decimal");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryNameId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MyFirstDevOpsProjectApp.Models.OrderEntity", b =>
                {
                    b.HasOne("MyFirstDevOpsProjectApp.Models.CustomerEntity", "CustomerId")
                        .WithMany()
                        .HasForeignKey("CustomerIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerId");
                });

            modelBuilder.Entity("MyFirstDevOpsProjectApp.Models.OrderRowEntity", b =>
                {
                    b.HasOne("MyFirstDevOpsProjectApp.Models.OrderEntity", "OrderId")
                        .WithMany()
                        .HasForeignKey("OrderIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyFirstDevOpsProjectApp.Models.ProductEntity", "ProductId")
                        .WithMany()
                        .HasForeignKey("ProductIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderId");

                    b.Navigation("ProductId");
                });

            modelBuilder.Entity("MyFirstDevOpsProjectApp.Models.ProductEntity", b =>
                {
                    b.HasOne("MyFirstDevOpsProjectApp.Models.CategoryEntity", "CategoryName")
                        .WithMany()
                        .HasForeignKey("CategoryNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryName");
                });
#pragma warning restore 612, 618
        }
    }
}
